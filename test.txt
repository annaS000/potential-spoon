import React, { useState, useEffect } from 'react';

function DataCards() {
    const [data, setData] = useState([]);          // State to store the fetched data
    const [searchTerm, setSearchTerm] = useState('');  // State to store the search term
    const [selectedCard, setSelectedCard] = useState(null);  // State to store the selected card's details

    // Fetch data from Flask API on component mount
    useEffect(() => {
        fetch('http://localhost:5000/api/data')  // Adjust the API URL as needed
            .then(response => response.json())
            .then(data => setData(data))
            .catch(error => console.error('Error:', error));
    }, []);

    // Filter data based on search term
    const filteredData = data.filter(item => 
        item.name.toLowerCase().includes(searchTerm.toLowerCase())
    );

    // Handle clicking on a card
    const handleCardClick = (cardData) => {
        setSelectedCard(cardData);
    };

    return (
        <div>
            <input
                type="text"
                placeholder="Search..."
                value={searchTerm}
                onChange={e => setSearchTerm(e.target.value)}
            />
            <div className="card-container">
                {filteredData.map((item, index) => (
                    <div key={index} className="card" onClick={() => handleCardClick(item)}>
                        <h3>{item.name}</h3>
                        <p>{item.summary}</p>
                    </div>
                ))}
            </div>
            {selectedCard && (
                <div className="card-details">
                    <h2>{selectedCard.name}</h2>
                    <p>{selectedCard.description}</p>
                    {/* Display other attributes as needed */}
                </div>
            )}
        </div>
    );
}

export default DataCards;









———————



.card-container {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
    justify-content: center;
}

.card {
    cursor: pointer;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
    width: 200px;
}

.card-details {
    margin-top: 20px;
    border-top: 2px solid black;
    padding-top: 10px;
}

---
.card-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); /* Creates as many columns as can fit without making them smaller than 200px */
    gap: 20px; /* Space between cards */
    padding: 20px; /* Padding around the grid */
}

.card {
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Ensures the content inside the card is spaced out evenly */
    align-items: stretch; /* Stretches card items to fill the width of the card */
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 20px;
    background-color: white;
    box-shadow: 0 4px 8px rgba(0,0,0,0.1); /* Adds a subtle shadow for better contrast */
}

.card-details {
    margin-top: 20px;
    border-top: 2px solid black;
    padding-top: 10px;
    background-color: #f9f9f9; /* Slightly different background for contrast */
}

@media (max-width: 768px) {
    .card-container {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    }
}

@media (min-width: 769px) and (max-width: 1024px) {
    .card-container {
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
    }
}

